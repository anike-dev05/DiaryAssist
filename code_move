If you don't have access to the `pgmpy` library, you can use the `synthcity` library for implementing Bayesian networks. Here's how you can create a Bayesian network and perform causal inference using `synthcity`:

```python
from synthcity import DirectedGraph
from synthcity.inference import BayesianNetworkInference
import pandas as pd

# Load your credit card analytics data into a DataFrame
data = pd.read_csv("credit_card_data.csv")

# Create a directed graph to represent the Bayesian network structure
# Here, you'll define the edges based on your domain knowledge or assumptions
graph = DirectedGraph()
# Add edges based on your domain knowledge or assumptions
# For demonstration purposes, let's assume a simple structure where each variable directly influences 'bad_rate'
graph.add_edge('var1', 'bad_rate')
graph.add_edge('var2', 'bad_rate')
graph.add_edge('var3', 'bad_rate')

# Instantiate BayesianNetworkInference with your data and the graph structure
bn_inference = BayesianNetworkInference(data, graph)

# Perform inference to calculate the causal effect of each variable on 'bad_rate'
# Here, you can specify the variables for which you want to calculate the causal effect
causal_effects = bn_inference.get_causal_effects(['var1', 'var2', 'var3'], 'bad_rate')

# Print the causal effects
print("Causal effects on bad rate change:")
for variable, effect in causal_effects.items():
    print(f"{variable}: {effect}")
```

This code outlines how to create a Bayesian network structure using `synthcity`, instantiate BayesianNetworkInference with your data and graph structure, and then calculate the causal effect of each variable on the 'bad_rate'. Adjust the graph structure based on your specific domain knowledge or assumptions.